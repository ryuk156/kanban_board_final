{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\kanban_board\\\\kanban\\\\src\\\\views\\\\board\\\\Board.js\";\nimport React, { useEffect, useState } from 'react';\nimport commonStyles from './../../common/styles/styles.module.css';\nimport styles from './Board.module.css';\nimport { getBoard, getColumns, addColumn, updateColumn, deleteColumn, deleteBoard } from '../../utils/data';\nimport { Loader } from '../../common/loader/Loader';\nimport { Card } from '../../components/card/Card';\nimport { AddCard } from '../../components/add-card/AddCard';\nimport { AddColumn } from '../../components/add-column/AddColumn';\nimport { createDeepCopy } from '../../utils/utility';\nimport * as shortid from 'shortid';\nimport { Alert } from '../../common/alert/Alert';\nexport const Board = ({\n  match,\n  history\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [board, setBoard] = useState({});\n  const [isColumnAdd, setIsColumnAdd] = useState(false);\n  const [columns, setColumns] = useState([]);\n  const [isCardAdd, setIsCardAdd] = useState(false);\n  const [selectedColumn, setSelectedColumn] = useState(null);\n  const [isAdd, setIsAdd] = useState(true);\n  const [inEditCard, setInEditCard] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    (async function () {\n      const data = await getBoard(match.params.name);\n      setBoard(data);\n      await getAllColumns(data.id, setColumns);\n      setLoading(false);\n    })();\n  }, [match]);\n\n  function handleAddCloumn(columnName) {\n    const newColumn = {\n      boardId: board.id,\n      name: columnName,\n      cards: [],\n      created: Date.now()\n    };\n    addColumn(newColumn).then(value => {\n      if (value) {\n        newColumn['id'] = value;\n        setColumns([...columns, newColumn]);\n        setIsColumnAdd(false);\n      }\n    }).catch(error => {\n      setError(error.message);\n    });\n  }\n\n  function handleModalClose() {\n    setIsColumnAdd(false);\n  }\n\n  function openAddCard(column) {\n    setIsCardAdd(true);\n    setSelectedColumn(column);\n    setInEditCard(null);\n  }\n\n  async function addCard(card) {\n    try {\n      card['id'] = shortid();\n      const cards = [...selectedColumn.cards, card];\n      const uColumn = createDeepCopy(selectedColumn);\n      uColumn.cards = cards;\n      const val = await updateColumn(uColumn.id, uColumn);\n\n      if (val) {\n        afterUpdateColumn(columns, selectedColumn, uColumn, setColumns);\n        setIsCardAdd(false);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  function openCardEdit(card, column) {\n    setIsAdd(false);\n    setIsCardAdd(true);\n    setSelectedColumn(column);\n    setInEditCard(card);\n  }\n\n  async function handleCardEdit(upCard) {\n    try {\n      const card = {\n        id: inEditCard.id,\n        ...upCard\n      };\n      const uColumn = createDeepCopy(selectedColumn);\n      const cards = selectedColumn.cards.filter(c => c.id !== inEditCard.id);\n      const newCards = [...cards, card];\n      uColumn.cards = newCards;\n      const val = await updateColumn(selectedColumn.id, uColumn);\n\n      if (val) {\n        afterUpdateColumn(columns, selectedColumn, uColumn, setColumns);\n        setIsAdd(true);\n        setIsCardAdd(false);\n        setSelectedColumn(null);\n        setInEditCard(null);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  async function handleCardArchive(card, column) {\n    try {\n      card.isArchive = true;\n      const newCards = column.cards.filter(c => c.id !== card.id);\n      const upColumn = createDeepCopy(column);\n      upColumn.cards = [...newCards, card];\n      const val = await updateColumn(column.id, upColumn);\n\n      if (val) {\n        afterUpdateColumn(columns, column, upColumn, setColumns);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  async function onDragDrop(ev, newColumn) {\n    try {\n      const card = JSON.parse(ev.dataTransfer.getData('card'));\n      const oldColumn = JSON.parse(ev.dataTransfer.getData('columnFrom'));\n\n      if (oldColumn.id === newColumn.id) {\n        return;\n      }\n\n      oldColumn.cards = oldColumn.cards.filter(c => c.id !== card.id);\n      const val = await updateColumn(oldColumn.id, oldColumn);\n      newColumn.cards = [...newColumn.cards, card];\n      const val1 = await updateColumn(newColumn.id, newColumn);\n\n      if (val && val1) {\n        const newCols = columns.filter(col => col.id !== oldColumn.id && col.id !== newColumn.id);\n        const sortedCols = [...newCols, oldColumn, newColumn].sort((a, b) => a.created - b.created);\n        setColumns(sortedCols);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  function handleDeleteColumn(column) {\n    const newCols = columns.filter(c => c.id !== column.id).sort((a, b) => a.created - b.created);\n    deleteColumn(column.id).then(() => {\n      setColumns(newCols);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }\n\n  async function handleBoardDelete() {\n    if (window.confirm('Are you sure you want to delete the board?')) {\n      setLoading(true);\n      await Promise.all(columns.map(async c => {\n        await deleteColumn(c.id);\n      }));\n      const val = await deleteBoard(board.id);\n\n      if (val) {\n        history.push('/');\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.containerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: commonStyles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, board.name), /*#__PURE__*/React.createElement(\"button\", {\n    className: commonStyles.danger,\n    onClick: handleBoardDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, \"Delete Board\")), error && /*#__PURE__*/React.createElement(Alert, {\n    type: 'error',\n    canClose: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ui,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, columns.map(column => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.column,\n      key: column.id,\n      onDragOver: e => e.preventDefault(),\n      onDrop: e => {\n        onDragDrop(e, column);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, column.name, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.trash,\n      onClick: () => handleDeleteColumn(column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      style: {\n        fontSize: '25px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, \"delete_outline\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    }, column.cards.map(card => !card.isArchive && /*#__PURE__*/React.createElement(Card, {\n      card: card,\n      board: board,\n      key: card.id,\n      hanldeEdit: () => openCardEdit(card, column),\n      hanldeArchive: () => handleCardArchive(card, column),\n      column: column,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.addButton,\n      onClick: () => openAddCard(column),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, \"+ Add card\")));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.addButton,\n    onClick: () => setIsColumnAdd(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 15\n    }\n  }, \"+ Add List\")))), isColumnAdd && /*#__PURE__*/React.createElement(AddColumn, {\n    handleClose: handleModalClose,\n    handleAdd: handleAddCloumn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }), isCardAdd && /*#__PURE__*/React.createElement(AddCard, {\n    board: board,\n    handleCardAdd: addCard,\n    handleClose: () => setIsCardAdd(false),\n    isAdd: isAdd,\n    card: inEditCard,\n    handleEdit: handleCardEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction afterUpdateColumn(columns, selectedColumn, upColumn, setColumns) {\n  const filColumns = columns.filter(cl => cl.id !== selectedColumn.id);\n  const newColumns = [...filColumns, upColumn];\n  newColumns.sort((a, b) => a.created - b.created);\n  setColumns(newColumns);\n}\n\nasync function getAllColumns(id, setColumns) {\n  const resCols = await getColumns(id);\n  setColumns(resCols);\n}","map":{"version":3,"sources":["C:/Users/Dell/Desktop/kanban_board/kanban/src/views/board/Board.js"],"names":["React","useEffect","useState","commonStyles","styles","getBoard","getColumns","addColumn","updateColumn","deleteColumn","deleteBoard","Loader","Card","AddCard","AddColumn","createDeepCopy","shortid","Alert","Board","match","history","loading","setLoading","board","setBoard","isColumnAdd","setIsColumnAdd","columns","setColumns","isCardAdd","setIsCardAdd","selectedColumn","setSelectedColumn","isAdd","setIsAdd","inEditCard","setInEditCard","error","setError","data","params","name","getAllColumns","id","handleAddCloumn","columnName","newColumn","boardId","cards","created","Date","now","then","value","catch","message","handleModalClose","openAddCard","column","addCard","card","uColumn","val","afterUpdateColumn","openCardEdit","handleCardEdit","upCard","filter","c","newCards","handleCardArchive","isArchive","upColumn","onDragDrop","ev","JSON","parse","dataTransfer","getData","oldColumn","val1","newCols","col","sortedCols","sort","a","b","handleDeleteColumn","err","handleBoardDelete","window","confirm","Promise","all","map","push","container","containerHeader","title","danger","ui","e","preventDefault","trash","fontSize","addButton","filColumns","cl","newColumns","resCols"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport commonStyles from './../../common/styles/styles.module.css';\r\nimport styles from './Board.module.css';\r\nimport {\r\n  getBoard,\r\n  getColumns,\r\n  addColumn,\r\n  updateColumn,\r\n  deleteColumn,\r\n  deleteBoard,\r\n} from '../../utils/data';\r\nimport { Loader } from '../../common/loader/Loader';\r\nimport { Card } from '../../components/card/Card';\r\nimport { AddCard } from '../../components/add-card/AddCard';\r\nimport { AddColumn } from '../../components/add-column/AddColumn';\r\nimport { createDeepCopy } from '../../utils/utility';\r\nimport * as shortid from 'shortid';\r\nimport { Alert } from '../../common/alert/Alert';\r\n\r\nexport const Board = ({ match, history }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [board, setBoard] = useState({});\r\n  const [isColumnAdd, setIsColumnAdd] = useState(false);\r\n  const [columns, setColumns] = useState([]);\r\n  const [isCardAdd, setIsCardAdd] = useState(false);\r\n  const [selectedColumn, setSelectedColumn] = useState(null);\r\n  const [isAdd, setIsAdd] = useState(true);\r\n  const [inEditCard, setInEditCard] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const data = await getBoard(match.params.name);\r\n     \r\n      setBoard(data);\r\n      await getAllColumns(data.id, setColumns);\r\n      setLoading(false);\r\n    })();\r\n  }, [match]);\r\n\r\n  function handleAddCloumn(columnName) {\r\n    const newColumn = {\r\n      boardId: board.id,\r\n      name: columnName,\r\n      cards: [],\r\n      created: Date.now(),\r\n    };\r\n\r\n    addColumn(newColumn)\r\n      .then((value) => {\r\n        if (value) {\r\n          newColumn['id'] = value;\r\n          setColumns([...columns, newColumn]);\r\n          setIsColumnAdd(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n      });\r\n  }\r\n\r\n  function handleModalClose() {\r\n    setIsColumnAdd(false);\r\n  }\r\n\r\n  function openAddCard(column) {\r\n    setIsCardAdd(true);\r\n    setSelectedColumn(column);\r\n    setInEditCard(null);\r\n  }\r\n\r\n  async function addCard(card) {\r\n    try {\r\n      card['id'] = shortid();\r\n      const cards = [...selectedColumn.cards, card];\r\n      const uColumn = createDeepCopy(selectedColumn);\r\n      uColumn.cards = cards;\r\n      const val = await updateColumn(uColumn.id, uColumn);\r\n      if (val) {\r\n        afterUpdateColumn(columns, selectedColumn, uColumn, setColumns);\r\n        setIsCardAdd(false);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n  function openCardEdit(card, column) {\r\n    setIsAdd(false);\r\n    setIsCardAdd(true);\r\n    setSelectedColumn(column);\r\n    setInEditCard(card);\r\n  }\r\n\r\n  async function handleCardEdit(upCard) {\r\n    try {\r\n      const card = { id: inEditCard.id, ...upCard };\r\n      const uColumn = createDeepCopy(selectedColumn);\r\n      const cards = selectedColumn.cards.filter((c) => c.id !== inEditCard.id);\r\n      const newCards = [...cards, card];\r\n      uColumn.cards = newCards;\r\n      const val = await updateColumn(selectedColumn.id, uColumn);\r\n      if (val) {\r\n        afterUpdateColumn(columns, selectedColumn, uColumn, setColumns);\r\n        setIsAdd(true);\r\n        setIsCardAdd(false);\r\n        setSelectedColumn(null);\r\n        setInEditCard(null);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n  async function handleCardArchive(card, column) {\r\n    try {\r\n      card.isArchive = true;\r\n      const newCards = column.cards.filter((c) => c.id !== card.id);\r\n      const upColumn = createDeepCopy(column);\r\n      upColumn.cards = [...newCards, card];\r\n      const val = await updateColumn(column.id, upColumn);\r\n      if (val) {\r\n        afterUpdateColumn(columns, column, upColumn, setColumns);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n  async function onDragDrop(ev, newColumn) {\r\n    try {\r\n      const card = JSON.parse(ev.dataTransfer.getData('card'));\r\n      const oldColumn = JSON.parse(ev.dataTransfer.getData('columnFrom'));\r\n      if (oldColumn.id === newColumn.id) {\r\n        return;\r\n      }\r\n      oldColumn.cards = oldColumn.cards.filter((c) => c.id !== card.id);\r\n      const val = await updateColumn(oldColumn.id, oldColumn);\r\n      newColumn.cards = [...newColumn.cards, card];\r\n      const val1 = await updateColumn(newColumn.id, newColumn);\r\n      if (val && val1) {\r\n        const newCols = columns.filter(\r\n          (col) => col.id !== oldColumn.id && col.id !== newColumn.id\r\n        );\r\n        const sortedCols = [...newCols, oldColumn, newColumn].sort(\r\n          (a, b) => a.created - b.created\r\n        );\r\n        setColumns(sortedCols);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n\r\n  function handleDeleteColumn(column) {\r\n    const newCols = columns\r\n      .filter((c) => c.id !== column.id)\r\n      .sort((a, b) => a.created - b.created);\r\n    deleteColumn(column.id)\r\n      .then(() => {\r\n        setColumns(newCols);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n      });\r\n  }\r\n\r\n  async function handleBoardDelete() {\r\n    if (window.confirm('Are you sure you want to delete the board?')) {\r\n      setLoading(true);\r\n      await Promise.all(\r\n        columns.map(async (c) => {\r\n          await deleteColumn(c.id);\r\n        })\r\n      );\r\n      const val = await deleteBoard(board.id);\r\n      if (val) {\r\n        history.push('/');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.container}>\r\n          <div className={styles.containerHeader}>\r\n            <h2 className={commonStyles.title}>{board.name}</h2>\r\n            <button className={commonStyles.danger} onClick={handleBoardDelete}>\r\n              Delete Board\r\n            </button>\r\n          </div>\r\n          {error && (\r\n            <Alert type={'error'} canClose={() => setError(null)}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <div className={styles.ui}>\r\n            <div className={styles.columns}>\r\n              {columns.map((column) => {\r\n                return (\r\n                  <div\r\n                    className={styles.column}\r\n                    key={column.id}\r\n                    onDragOver={(e) => e.preventDefault()}\r\n                    onDrop={(e) => {\r\n                      onDragDrop(e, column);\r\n                    }}\r\n                  >\r\n                    <header>\r\n                      {column.name}\r\n                      <div\r\n                        className={styles.trash}\r\n                        onClick={() => handleDeleteColumn(column)}\r\n                      >\r\n                        <i\r\n                          className=\"material-icons\"\r\n                          style={{ fontSize: '25px' }}\r\n                        >\r\n                          delete_outline\r\n                        </i>\r\n                      </div>\r\n                    </header>\r\n                    <ul>\r\n                      {column.cards.map(\r\n                        (card) =>\r\n                          !card.isArchive && (\r\n                            <Card\r\n                              card={card}\r\n                              board={board}\r\n                              key={card.id}\r\n                              hanldeEdit={() => openCardEdit(card, column)}\r\n                              hanldeArchive={() =>\r\n                                handleCardArchive(card, column)\r\n                              }\r\n                              column={column}\r\n                            />\r\n                          )\r\n                      )}\r\n                    </ul>\r\n                    <footer>\r\n                      <div\r\n                        className={styles.addButton}\r\n                        onClick={() => openAddCard(column)}\r\n                      >\r\n                       + Add card\r\n                      </div>\r\n                    </footer>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div\r\n                className={styles.addButton}\r\n                onClick={() => setIsColumnAdd(true)}\r\n              >\r\n                + Add List\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isColumnAdd && (\r\n        <AddColumn handleClose={handleModalClose} handleAdd={handleAddCloumn} />\r\n      )}\r\n      {isCardAdd && (\r\n        <AddCard\r\n          board={board}\r\n          handleCardAdd={addCard}\r\n          handleClose={() => setIsCardAdd(false)}\r\n          isAdd={isAdd}\r\n          card={inEditCard}\r\n          handleEdit={handleCardEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nfunction afterUpdateColumn(columns, selectedColumn, upColumn, setColumns) {\r\n  const filColumns = columns.filter((cl) => cl.id !== selectedColumn.id);\r\n  const newColumns = [...filColumns, upColumn];\r\n  newColumns.sort((a, b) => a.created - b.created);\r\n  setColumns(newColumns);\r\n}\r\n\r\nasync function getAllColumns(id, setColumns) {\r\n  const resCols = await getColumns(id);\r\n  setColumns(resCols);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}